name: Build Debian Package

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.5

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debhelper-compat=13 python3-all python3-setuptools dh-python
      
      - name: Set up secrets
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          GUILDURI: ${{ secrets.GUILDURI }}
          TOKEN: ${{ secrets.TOKEN }}
          HETZNER_TOKEN: ${{ secrets.HETZNER_TOKEN }}
        run: |
          sed -i "s|'${CLIENT_ID}'|'${CLIENT_ID}'|" vars.py
          sed -i "s|'${CLIENT_SECRET}'|'${CLIENT_SECRET}'|" vars.py
          sed -i "s|'${guildURI}'|'${guildURI}'|" vars.py
          sed -i "s|'${TOKEN}'|'${TOKEN}'|" vars.py

      - name: Build .deb package
        run: dpkg-buildpackage -us -uc

      - name: Create artifacts
        run: |
          cd ..
          ls -l
          find .. -maxdepth 1 -type f -name '*.deb' -exec mv {} $GITHUB_WORKSPACE \;
        working-directory: debian

      - name: Upload .deb package
        uses: actions/upload-artifact@v2
        with:
          name: deb-package
          path: ${{ github.workspace }}/*.deb
      
      - name: Set up Terraform
        run: |
          if [ ! -x "$(command -v terraform)" ]; then
            curl -fsSL https://releases.hashicorp.com/terraform/0.14.10/terraform_0.14.10_linux_amd64.zip -o terraform.zip
            unzip terraform.zip
            sudo mv terraform /usr/local/bin/
          fi
          terraform init
        working-directory: terraform/

      - name: Deploy Hetzner Server
        run: |
          terraform apply -auto-approve
        working-directory: path/to/terraform/files
