name: Build Debian Package

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.5

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debhelper-compat=13 python3-all python3-setuptools dh-python
      
      - name: Set up secrets
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          GUILDURI: ${{ secrets.GUILDURI }}
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          sed -i "s|'${CLIENT_ID}'|'${CLIENT_ID}'|" vars.py
          sed -i "s|'${CLIENT_SECRET}'|'${CLIENT_SECRET}'|" vars.py
          sed -i "s|'${guildURI}'|'${guildURI}'|" vars.py
          sed -i "s|'${TOKEN}'|'${TOKEN}'|" vars.py

      - name: Build .deb package
        run: dpkg-buildpackage -us -uc

      - name: Create artifacts
        run: |
          cd ..
          ls -l
          find .. -maxdepth 1 -type f -name '*.deb' -exec mv {} $GITHUB_WORKSPACE \;
        working-directory: debian

      - name: Upload .deb package
        uses: actions/upload-artifact@v2
        with:
          name: deb-package
          path: ${{ github.workspace }}/*.deb

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.2
          terraform_wrapper: false
    
      - name: Terraform Init
        run: terraform init -upgrade
    
      - name: Terraform Plan
       # run: terraform plan -var="hcloud_token=${{ secrets.HETZNER_TOKEN }}" -var="hcloud_key_pub=${{ secrets.SSH_PUBLIC_KEY }}" -out=tfplan
        run: terraform plan -var="hcloud_token=${{ secrets.HETZNER_TOKEN }}" -var="hcloud_key_pub=${{ secrets.SSH_PUBLIC_KEY }}" -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Get Server IP
        id: server_ip
        run: |
          echo "server_ip=$(terraform output -json server_ip)" >> $GITHUB_OUTPUT

      - name: Wait for Server Available
        run: |
          echo ${{ steps.server_ip.outputs.server_ip }}
          sleep 30

      - name: Deploy deb package
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > deploy_key
          chmod 600 deploy_key
          scp -i deploy_key -o StrictHostKeyChecking=no -vvv ${{ github.workspace }}/*.deb root@${{ steps.server_ip.outputs.server_ip }}:/etc
          ssh -i deploy_key -o StrictHostKeyChecking=no root@${{ steps.server_ip.outputs.server_ip }} "dpkg -i /etc/*.deb"
        shell: bash
